description: A linear data structure which follows FILO.
questions:
  - name: Valid Parentheses
    title: valid-parentheses
    difficulty: Easy
    id: 20
    link: /structures/stack/020
    origin: https://leetcode.cn/problems/valid-parentheses
    tag: stack
    category: structures
    done: true
  - name: Simplify Path
    title: simplify-path
    difficulty: Medium
    id: 71
    link: /structures/stack/071
    origin: https://leetcode.cn/problems/simplify-path
    tag: stack
    category: structures
    done: true
  - name: Evaluate Reverse Polish Notation
    title: evaluate-reverse-polish-notation
    difficulty: Medium
    id: 150
    link: /structures/stack/150
    origin: https://leetcode.cn/problems/evaluate-reverse-polish-notation
    tag: stack
    category: structures
    done: true
  - name: Reverse Words in a String
    title: reverse-words-in-a-string
    difficulty: Medium
    id: 151
    link: /structures/stack/151
    origin: https://leetcode.cn/problems/reverse-words-in-a-string
    tag: stack
    category: structures
    done: true
  - name: Implement Stack using Queues
    title: implement-stack-using-queues
    difficulty: Easy
    id: 225
    link: /structures/stack/225
    origin: https://leetcode.cn/problems/implement-stack-using-queues
    tag: stack
    category: structures
  - name: Implement Queue using Stacks
    title: implement-queue-using-stacks
    difficulty: Easy
    id: 232
    link: /structures/stack/232
    origin: https://leetcode.cn/problems/implement-queue-using-stacks
    tag: stack
    category: structures
  - name: Remove All Adjacent Duplicates In String
    title: remove-all-adjacent-duplicates-in-string
    difficulty: Easy
    id: 1047
    link: /structures/stack/1047
    origin: https://leetcode.cn/problems/remove-all-adjacent-duplicates-in-string
    tag: stack
    category: structures
    done: true
